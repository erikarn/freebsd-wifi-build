#!/bin/sh

get_mfs_size()
{
	kernel=$1
	set 0 0 # reset variables
	# $1 takes the offset of the MFS filesystem
	set `strings -at d $kernel | grep "MFS Filesystem goes here"`
	mfs_start=$1
	set 0 0 # reset variables
	set `strings -at d $kernel | grep "MFS Filesystem had better"`
	mfs_end=$1
	mfs_size="$((${mfs_end} - ${mfs_start}))"
	mfs_ofs=$((${mfs_start}))
	echo "start: $mfs_start ; end: $mfs_end; size: $mfs_size"
	echo "offset for mfs in kernel: $mfs_ofs"
}

SCRIPT_NAME="`basename $0`"
SCRIPT_DIR="`dirname $0`"
CUR_DIR="`pwd`"

# suck in the per-device options
CFGNAME=$1
shift
. ${SCRIPT_DIR}/../cfg/${CFGNAME} || exit 1
# If X_BUILD_BASE_CFG is set, also load that in.
if [ "x${X_BUILD_BASE_CFG}" != "x" ]; then
	. ${SCRIPT_DIR}/../cfg/base/${X_BUILD_BASE_CFG} || exit 1
fi

# include the config variable generation code
. ${SCRIPT_DIR}/../lib/cfg.sh || exit 1

# get the kernel MFS size
# this sets mfs_ofs, mfs_end, mfs_start, mfs_size
cp ${X_KERNEL} ${X_KERNEL}.netboot
get_mfs_size ${X_KERNEL}.netboot

# add it to the kernel
echo "*** copying the mfsroot into the kernel image"
dd if=${X_FSIMAGE}${X_FSIMAGE_SUFFIX} ibs=8192 iseek=0 of=${X_KERNEL}.netboot obs=${mfs_ofs} oseek=1 conv=notrunc

echo "*** generate md5 for ${X_KERNEL}.netboot"
md5 -q ${X_KERNEL}.netboot > ${X_KERNEL}.netboot.md5

cp ${X_KERNEL}.netboot ${X_TFTPBOOT}/kernel.${KERNCONF}.netboot

echo "*** Complete."
