#!/bin/sh

SCRIPT_NAME="`basename $0`"
SCRIPT_DIR="`dirname $0`"
CUR_DIR="`pwd`"

X_SRCDIR=${CUR_DIR}

# XXX TODO for non-root builds
#
# We need to use the cross-build install program in order to
# take advantage of the mtree-aware upgrades that it's recently
# received.

#
# Unfortunately there's no "easy way" to derive that; so we have
# to derive it ourselves.

INSTALL_PROG="install"

# suck in the per-device options
CFGNAME=$1
shift
. ${SCRIPT_DIR}/../cfg/${CFGNAME} || exit 1

# include the config variable generation code
. ${SCRIPT_DIR}/../lib/cfg.sh || exit 1

# calculate basedir
# XXX this should be generated in cfg.pm!
X_BASEDIR=${SCRIPT_DIR}/../

echo "*** Deleting old file system.."
${INSTALL_PROG} -d ${X_STAGING_FSROOT}
chflags -R noschg ${X_STAGING_FSROOT}
rm -rf ${X_STAGING_FSROOT}
rm -rf ${X_STAGING_TMPDIR}

echo "*** Creating new filesystem..."
mkdir -p ${X_STAGING_FSROOT}
mkdir -p ${X_STAGING_TMPDIR}

# ok, let's just populate the whole staging root with the installed root
rsync -arH ${X_DESTDIR}/ ${X_STAGING_FSROOT}

# .. now, kernel; that's living elsewhere?

# TODO:
#
# Populate a second METALOG; pass in two to makefs so it joins them
# together and adds/overrides things appropriately.
#
# Use install with the right metalog/destdir stuff so it populates
# the second metalog!

# now, default /etc/fstab
# XXX TODO: label!
echo "${X_ROOTFS_DEV} / ufs rw 1 1" > ${X_STAGING_TMPDIR}/fstab
install -m 644 ${X_STAGING_TMPDIR}/fstab ${X_STAGING_FSROOT}/etc/

# .. and default to autosize_enable=yes
echo "autosize_enable=\"YES\"" > ${X_STAGING_TMPDIR}/rc.conf
echo "autosize_rootdev=\"${X_ROOTFS_DEV}\"" >> ${X_STAGING_TMPDIR}/rc.conf
install -m 644 ${X_STAGING_TMPDIR}/rc.conf ${X_STAGING_FSROOT}/etc/

install -m 755 ${X_BASEDIR}/files.full/autosize ${X_STAGING_FSROOT}/etc/rc.d/

echo "**** Done."
