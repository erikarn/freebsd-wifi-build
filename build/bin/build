#!/bin/sh

SCRIPT_NAME="`basename $0`"
SCRIPT_DIR="`dirname $0`"
CUR_DIR="`pwd`"

CFGNAME=$1
shift

USER_SETTINGS=${USER_SETTINGS:-${HOME}/.freebsd-wifi-build-settings.cfg}
. ${SCRIPT_DIR}/../cfg/${CFGNAME} || exit 1
test -e ${USER_SETTINGS} && . ${USER_SETTINGS}
export USER_SETTINGS

X_BUILDASUSER=${X_BUILDASUSER:-YES}
export X_BUILDASUSER

echo "*** Configuration file	: $CFGNAME"
echo "*** Platform		: $BUILDNAME"

if [ "x$X_BUILDASUSER" = "xYES" ]; then
  echo "*** User build as : $LOGNAME"
  # NOTE: we could test if ${X_FAKEROOT} exists, but it might be a list rather than a single binary
  #       so just handle the default case
fi

# include the config variable generation code
. ${SCRIPT_DIR}/../lib/cfg.sh || exit 1

# Defaults:
# if $1 is empty, then try the BUILD_THINGS and BUILD_IMG target list.
# If it's buildimg, then BUILDIMG target list.
# If it's cleanimg, then CLEANIMG target list.
# If it's cleanall, then CLEANALL target list.
if [ "x$1" = "x" ]; then
	X_BUILD_LIST="${X_BUILD_BUILD_THINGS_DEFAULTS} ${X_BUILD_BUILD_IMG_DEFAULTS}"
elif [ "x$1" = "xbuildimg" ]; then
	X_BUILD_LIST=${X_BUILD_BUILD_IMG_DEFAULTS}
elif [ "x$1" = "xcleanimg" ]; then
	X_BUILD_LIST=${X_BUILD_CLEANIMG_DEFAULTS}
elif [ "x$1" = "xcleanall" ]; then
	X_BUILD_LIST=${X_BUILD_CLEANALL_DEFAULTS}
else
	X_BUILD_LIST=$*
fi

echo "Build list: ${X_BUILD_LIST}"

for BUILD_TARGET in ${X_BUILD_LIST}; do
	echo "*** Target		: ${BUILD_TARGET}"

	case $BUILD_TARGET in
		'buildworld' | 'buildkernel' | 'installworld' | \
		    'installkernel' | 'distribution' | 'buildenv' | \
		    'toolchain' | 'kernel-toolchain' | 'xdev' | 'buildenvvars' )
			${SCRIPT_DIR}/build_freebsd ${CFGNAME} $BUILD_TARGET || exit 1
		;;
		'cleanroot')
			${SCRIPT_DIR}/build_cleanroot ${CFGNAME} $BUILD_TARGET || exit 1
		;;
		'cleanobj')
			${SCRIPT_DIR}/build_cleanobj ${CFGNAME} $BUILD_TARGET || exit 1
		;;
		'ubnt')
			${SCRIPT_DIR}/build_ubnt ${CFGNAME} || exit 1
		;;
		'tplink')
			${SCRIPT_DIR}/build_tplink ${CFGNAME} || exit 1
		;;
		'dlink')
			${SCRIPT_DIR}/build_dlink ${CFGNAME} || exit 1
		;;
		'airstation')
			${SCRIPT_DIR}/build_airstation ${CFGNAME} || exit 1
		;;
		'uboot')
			${SCRIPT_DIR}/build_uboot ${CFGNAME} || exit 1
		;;
		'fsimage')
			${SCRIPT_DIR}/build_fsimage ${CFGNAME} || exit 1
		;;
		'fullfsimage')
			${SCRIPT_DIR}/build_fullfsimage ${CFGNAME} || exit 1
		;;
		'tinymfsroot')
			${SCRIPT_DIR}/build_tinymfsroot ${CFGNAME} || exit 1
		;;
		'mfsroot')
			${SCRIPT_DIR}/build_mfsroot ${CFGNAME} || exit 1
		;;
		'fullroot')
			${SCRIPT_DIR}/build_fullroot ${CFGNAME} || exit 1
		;;
		'netboot')
			${SCRIPT_DIR}/build_netboot ${CFGNAME} || exit 1
		;;
		*)
			echo "*** ERROR: Unknown target: $BUILD_TARGET"
		;;
	esac



	echo "*** Target Done."
done

echo "*** Build Completed."
